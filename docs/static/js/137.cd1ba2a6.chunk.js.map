{"version":3,"file":"static/js/137.cd1ba2a6.chunk.js","mappings":"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","sources":["webpack://inventory-manager/./src/components/screen-header/styles.module.less?0a6a","components/screen-header/index.tsx","redux/action.ts","screens/categories/add-category-button.tsx","redux/use-dispatch-delete-category.ts","screens/categories/delete-category-button.tsx","screens/categories/edit-category-button.tsx","screens/categories/category-card.tsx","screens/categories/category-list.tsx","screens/categories/routes.tsx","screens/categories/index.tsx","translations.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"styles_header__SE5mY\"};","import React from 'react';\n\nimport styles from './styles.module.less';\n\nconst ScreenHeader: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n  <div className={`pb-4 ${styles.header}`}>\n    {children}\n  </div>\n);\n\nexport default ScreenHeader;\n","import { TState } from './types';\n\nconst action = (payload: TState) => ({\n  type: 'ACTION',\n  payload,\n});\n\nexport default action;\n","import { Button } from 'antd';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst AddCategoryButton: React.FC = () => {\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const onAdd = () => {\n    history.push(`${url}/add-category`);\n  };\n\n  return (\n    <Button onClick={() => onAdd()}>\n      <PlusOutlined />\n      Add New Category\n    </Button>\n  );\n};\n\nexport default AddCategoryButton;\n","import { useDispatch } from 'react-redux';\n\nimport action from './action';\nimport store from './store';\n\nconst useDispatchDeleteCategory = () => {\n  const dispatch = useDispatch();\n\n  return (categoryId: string) => {\n    const state = store.getState();\n\n    return dispatch(action({\n      ...state,\n      categories: state.categories.filter((it) => it.id !== categoryId),\n      inventoryItems: state.inventoryItems.filter((it) => it.categoryId === categoryId),\n    }));\n  };\n};\n\nexport default useDispatchDeleteCategory;\n","import { Button, Popconfirm } from 'antd';\nimport React from 'react';\n\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport useDispatchDeleteCategory from '../../redux/use-dispatch-delete-category';\n\nconst DeleteCategoryButton: React.FC<{ categoryId: string }> = ({ categoryId }) => {\n  const dispatchDeleteCategory = useDispatchDeleteCategory();\n\n  return (\n    <Popconfirm\n      title=\"Are you sure to delete the category?\"\n      onConfirm={() => {\n        dispatchDeleteCategory(categoryId);\n      }}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button>\n        <DeleteOutlined />\n        Delete\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteCategoryButton;\n","import { Button } from 'antd';\nimport React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { EditOutlined } from '@ant-design/icons';\n\nconst EditCategoryButton: React.FC<{ categoryId: string }> = ({ categoryId }) => {\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const onEdit = () => {\n    history.push(`${url}/${categoryId}/edit-category`);\n  };\n\n  return (\n    <Button onClick={() => onEdit()}>\n      <EditOutlined />\n      Edit\n    </Button>\n  );\n};\n\nexport default EditCategoryButton;\n","import { Card, Descriptions, Space, Typography } from 'antd';\nimport React from 'react';\n\nimport { fieldTypeTranslations } from '../../translations';\nimport { TCategory } from '../../types';\nimport DeleteCategoryButton from './delete-category-button';\nimport EditCategoryButton from './edit-category-button';\n\nconst CategoryCard: React.FC<{ category: TCategory }> = ({ category }) => (\n  <Card size=\"small\" className=\"mb-4 box-shadow\">\n    <Descriptions\n      layout=\"vertical\"\n      size=\"small\"\n      colon={false}\n    >\n      <Descriptions.Item label={<Typography.Text type=\"secondary\">Category title</Typography.Text>}>\n        {category.title}\n      </Descriptions.Item>\n      <Descriptions.Item label={<Typography.Text type=\"secondary\">Field title</Typography.Text>}>\n        {category.fields.find((it) => it.id === category.fieldTitleId)?.title}\n      </Descriptions.Item>\n      {category.fields.map((it) => (\n        <Descriptions.Item key={it.id} label={<Typography.Text type=\"secondary\">{it.title}</Typography.Text>}>\n          {fieldTypeTranslations.find((trans) => trans.type === it.type)?.label}\n        </Descriptions.Item>\n      ))}\n    </Descriptions>\n    <Space className=\"mt-1\" direction=\"horizontal\" size=\"small\">\n      <EditCategoryButton categoryId={category.id} />\n      <DeleteCategoryButton categoryId={category.id} />\n    </Space>\n  </Card>\n);\n\nexport default React.memo(CategoryCard);\n","import orderBy from 'lodash/orderBy';\nimport { Card, Result } from 'antd';\nimport React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\n\nimport { BulbOutlined } from '@ant-design/icons';\n\nimport { TState } from '../../redux/types';\nimport { TCategory } from '../../types';\nimport CategoryCard from './category-card';\n\nconst sortCategories = (list: TCategory[]) => (\n  orderBy(list, [(it) => it.title?.toLowerCase()], ['asc'])\n);\n\nconst CategoryList: React.FC = () => {\n  const categories = useSelector<TState, TCategory[]>((state) => state.categories, shallowEqual);\n\n  if (categories.length > 0) {\n    return (\n      <div>\n        {sortCategories(categories).map((category) => (\n          <CategoryCard key={category.id} category={category} />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <Card className=\"box-shadow\">\n      <Result\n        icon={<BulbOutlined />}\n        title=\"Categories are the core classification of the Inventory!\"\n        subTitle=\"Please add a category to start managing your inventory.\"\n      />\n    </Card>\n  );\n};\n\nexport default React.memo(CategoryList);\n","import React, { lazy } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport AppOverlaySpinner from '../../components/app-overlay-spinner';\nimport ErrorBoundary from '../../components/error-boundary';\n\nconst AddCategory = lazy(() => import('../add-category'));\nconst EditCategory = lazy(() => import('../edit-category'));\n\nconst CategoriesRoutes: React.ComponentType = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <ErrorBoundary>\n      <React.Suspense fallback={<AppOverlaySpinner />}>\n        <Switch>\n          <Route exact path={`${url}/add-category`}>\n            <AddCategory goBackUrl={url} />\n          </Route>\n          <Route exact path={`${url}/:categoryId/edit-category`}>\n            <EditCategory goBackUrl={url} />\n          </Route>\n        </Switch>\n      </React.Suspense>\n    </ErrorBoundary>\n  );\n};\n\nexport default CategoriesRoutes;\n","import { Col, Row, Typography } from 'antd';\nimport React from 'react';\n\nimport ScreenHeader from '../../components/screen-header';\nimport AddCategoryButton from './add-category-button';\nimport CategoryList from './category-list';\nimport CategoriesRoutes from './routes';\n\nconst Categories: React.FC = () => {\n  return (\n    <div>\n      <ScreenHeader>\n        <Row>\n          <Col xs={24} sm={24} md={12}>\n            <Typography.Title>Categories</Typography.Title>\n          </Col>\n          <Col xs={24} sm={24} md={12} className=\"flex flex-row justify-end items-center\">\n            <AddCategoryButton />\n          </Col>\n        </Row>\n      </ScreenHeader>\n      <CategoryList />\n      <CategoriesRoutes />\n    </div>\n  );\n};\n\nexport default Categories;\n","import { TCategoryFieldType } from './types';\n\nexport const fieldTypeTranslations: { type: TCategoryFieldType, label: string }[] = [\n  { type: 'ShortText', label: 'Short text' },\n  { type: 'LongText', label: 'Long text' },\n  { type: 'Number', label: 'Number' },\n  { type: 'Date', label: 'Date' },\n];\n"],"names":["children","className","styles","payload","type","history","useHistory","url","useRouteMatch","onClick","push","PlusOutlined","dispatch","useDispatch","categoryId","state","store","action","categories","filter","it","id","inventoryItems","dispatchDeleteCategory","useDispatchDeleteCategory","title","onConfirm","okText","cancelText","DeleteOutlined","EditOutlined","CategoryCard","category","size","layout","colon","label","fields","find","fieldTitleId","map","fieldTypeTranslations","trans","direction","React","CategoryList","list","useSelector","shallowEqual","length","orderBy","toLowerCase","icon","BulbOutlined","subTitle","AddCategory","lazy","EditCategory","fallback","exact","path","goBackUrl","xs","sm","md"],"sourceRoot":""}